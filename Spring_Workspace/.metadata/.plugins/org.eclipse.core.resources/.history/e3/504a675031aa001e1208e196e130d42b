package in.com.rays.dao;

import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import in.com.rays.dto.UserDTO;

@Repository
public class UserDaoJDBCImpl implements UserDAOInt {

	private JdbcTemplate jdbcTamplate;

	@Autowired
	public void setdataSource(DataSource datasource) {

		this.jdbcTamplate = new JdbcTemplate(datasource);

	}
   
	
	public long add(UserDTO dto) {
		String sql = "INSERT INTO USER VALUES(?,?,?,?,?)";
		int pk = jdbcTamplate.update(sql, dto.getId(), dto.getFirstName(), dto.getLastName(), dto.getLogin(),
				dto.getPassword());

		return pk;
	}

	public void update(UserDTO dto) {
		String sql = "UPDATE USER SET FIRSTNAME =? , LASTNAME = ?, LOGINID = ?, PASSWORD = ? WHERE ID= ?";

		int i = jdbcTamplate.update(sql, dto.getId(), dto.getFirstName(), dto.getLastName(), dto.getLogin(),
				dto.getPassword());

	}

	public void delete(long id) {
		// TODO Auto-generated method stub
		String sql = "DELETE FROM USER WHERE ID= ?";
		Object[] param = { id };

	}

	public UserDTO findByLogin(String login) {
		// TODO Auto-generated method stub
		String sql = "SELECT ID , FIRSTNAME , LASTNAME , LOGINID, PAWORD ,FROM USER WHERE LOGINID = ?";
		Object[] param = { login };
		UserDTO user = (UserDTO) jdbcTamplate.queryForObject(sql, param, new UserMapper());

		return user;
	}

	public UserDTO findByPK(long pk) {
		// TODO Auto-generated method stub
		String sql = "SELECT ID , FIRST_NAME, LAST_NAME , LOGIN , PASSWORD ";

		Object[] param = { pk };
		List list = jdbcTamplate.query(sql, param, new UserMapper());
		UserDTO dto = null;

		if (list.size() > 0) {
			dto = (UserDTO) list.get(0);

		}

		return dto;
	}

	public UserDTO authenticate(String login, String password) {
		// TODO Auto-generated method stub
		String sql = "SELECT ID, FIRSTNAME , LASTNAME , LOGIN, PASSWORD FORM USER WHERE LOGIN = ? AND PASSWORD =?";
		Object[] param = { login, password };
		UserDTO user = (UserDTO) jdbcTamplate.queryForObject(sql, param, new UserMapper());

		return user;
	}

	public List search(UserDTO dto) {
		// TODO Auto-generated method stub
		String sql = "SELECT ID, FIRSTNAME, LASTNAME, LOGINID, PASSWORD FROM USER";
		List l = jdbcTamplate.query(sql, new UserMapper());
		return l;
	}

	public List search(UserDTO dto, int pageNo, int pageSize) {
		// TODO Auto-generated method stub
		String sql = "SELECT ID, FIRSTNAME , LASTNAME, LOGINID, PASSWORD FROM USER LIMIT " + pageNo + "," + pageSize;
		List l = jdbcTamplate.query(sql, new UserMapper());
		return l;

	}

}
